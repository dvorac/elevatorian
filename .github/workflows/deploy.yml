name: Ukol SDLC - Infra Deploy

on:
  workflow_dispatch:
    inputs:
      target:
        description: The name of the environment to deploy
        required: true

env:
  TF_VAR_region: ${{ vars.AWS_REGION }}
  TF_VAR_role: ${{ secrets.AWS_IAM_ROLE }}
  TF_VAR_state_bucket: ${{ vars.AWS_TF_STATE_BUCKET }}
  TF_VAR_state_key: ${{ vars.AWS_TF_STATE_KEY }}

jobs:
  # the name here is important; github repo settings are watching for this
  # specific key to know what checks to guard PR merging on
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra
    permissions:
      id-token: write # required to use OIDC authentication
      contents: read # required to checkout the code from the repo
    steps:
      - name: clone
        uses: actions/checkout@v3
      - name: terraform setup
        uses: hashicorp/setup-terraform@v1.2.1
      - name: aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-region: ${{ vars.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          role-duration-seconds: 900
      - name: terraform init
        timeout-minutes: 2
        run: |
          terraform init \
              -input=false \
              -backend=true \
              -backend-config="region=${{ env.TF_VAR_region }}" \
              -backend-config="bucket=${{ env.TF_VAR_state_bucket }}" \
              -backend-config="key=${{ env.TF_VAR_state_key }}" \
              -reconfigure
      - name: terraform lint
        run: terraform validate
      - name: terraform plan
        run: terraform plan -out=terraform.plan
      - name: terraform apply
        run: terraform apply -auto-approve terraform.plan